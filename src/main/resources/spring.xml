<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd


        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">


    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/cinema_manager?characterEncoding=utf-8"/>
        <property name="username" value="root"/>
        <property name="password" value="1234"/>
    </bean>

    <!--SessionFactory配置-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          destroy-method="destroy">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>MoviesEntity.hbm.xml</value>
                <value>ManagersEntity.hbm.xml</value>
                <value>NewsEntity.hbm.xml</value>
                <value>TypesEntity.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.allow_update_outside_transaction">true</prop>

            </props>
        </property>
    </bean>

    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="managersDao" class="dao.ManagersDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="testAction" class="action.TestAction">
        <property name="managersService" ref="managersService"></property>
    </bean>

    <bean id="managersService" class="service.impl.ManagersServiceImpl">
        <property name="managersDao" ref="managersDao"></property>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <bean id="moviesDao" class="dao.MoviesDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="newsDao" class="dao.NewsDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="typesDao" class="dao.TypesDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>

    <bean id="moviesService" class="service.MoviesService">
        <property name="moviesDao" ref="moviesDao"></property>
    </bean>

    <bean id="newsService" class="service.NewsService">
        <property name="newsDao" ref="newsDao"></property>
    </bean>

    <bean id="typesService" class="service.TypesService">
        <property name="typesDao" ref="typesDao"></property>
    </bean>

    <bean id="moviesAction" class="action.MoviesAction">
        <property name="moviesService" ref="moviesService"></property>
        <property name="typesService" ref="typesService"></property>
    </bean>

    <bean id="newsAction" class="action.NewsAction">
        <property name="newsService" ref="newsService"></property>
    </bean>
    <!-- 定义事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <!-- 定义方法的过滤规则 -->
        <tx:attributes>
            <!-- 所有方法都使用事务 -->
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
    <!-- 定义AOP配置 -->
    <aop:config>
        <!-- 定义一个切入点 -->
        <aop:pointcut expression="execution (* service.*.*(..))" id="services"/>
        <!-- 对切入点和事务的通知，进行适配 -->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="services"/>
    </aop:config>

</beans>